//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "QKBaseViewController.h"

#import "UIGestureRecognizerDelegate-Protocol.h"

@class MPVolumeView, NSDate, NSString, NSTimer, QKAdvert, QKBrightnessVolumeView, QKNextVideoTitleView, QKPlayerControlView, QKPlayerExceptionView, QKVideoHoverAdsModel, QKVideoPlayEndView, QKVideoSuspensionAdvertView, UIButton, UIImageView, UISlider, UIView, VideoDrageProgress, VideoPlayerModel, VideoTraceReportModel, VrMovieViewController;
@protocol VideoPlayerControllerDelegate;

@interface VideoPlayerController : QKBaseViewController <UIGestureRecognizerDelegate>
{
    NSDate *_buffer_start;
    NSDate *_player_start;
    NSDate *_player_init_date;
    double _start_seek;
    _Bool _is_tool_bar_animating;
    _Bool _inActive;
    _Bool _isFullScreenAndDragress;
    _Bool _isSetUrl;
    _Bool _isFirstPlayByWifi;
    _Bool _isVideoProgressDraging;
    _Bool _isFullScreen;
    _Bool _isHor;
    _Bool _hasAlertingNow;
    _Bool _isShowClose;
    _Bool _hasNextVideo;
    _Bool _isTopLayer;
    _Bool _isNeedPauseVideoAuto;
    _Bool _timerToggle;
    _Bool _hoverAdToggle;
    _Bool _isNeesShow4GTips;
    _Bool _videoAutoEnable;
    _Bool _playEndInThreeSecondsHasCallBack;
    _Bool _hasAdvertInVideoEnd;
    int _videoPlayerState;
    int _playerState;
    int _pasuse_type;
    int _src;
    VrMovieViewController *_mVrMovieVC;
    VideoPlayerModel *_videoModel;
    VideoTraceReportModel *_traceModel;
    QKPlayerControlView *_playerControlView;
    QKVideoPlayEndView *_videoPlayEndView;
    QKPlayerExceptionView *_playerExceptionView;
    UIButton *_closeButton;
    UIImageView *_netWorkPlayImageView;
    id <VideoPlayerControllerDelegate> _delegate;
    UIView *_containView;
    NSTimer *_loopTimer;
    NSTimer *_hoverAdTimer;
    double _hoverAdCount;
    long long _panDirection;
    VideoDrageProgress *_drageProgress;
    long long _networkStatus;
    UIImageView *_bufferImageView;
    long long _lastFullScreenOrientation;
    QKBrightnessVolumeView *_myBriVolView;
    MPVolumeView *_sysVolumeView;
    double _briVolVariation;
    UISlider *_volumeViewSlider;
    double _currentBrightness;
    QKNextVideoTitleView *_nextVideoTitleView;
    QKAdvert *_videoEndAdvert;
    QKVideoSuspensionAdvertView *_suspensionAdvertView;
    QKVideoHoverAdsModel *_videoHoverAds;
}

@property(retain, nonatomic) QKVideoHoverAdsModel *videoHoverAds; // @synthesize videoHoverAds=_videoHoverAds;
@property(retain, nonatomic) QKVideoSuspensionAdvertView *suspensionAdvertView; // @synthesize suspensionAdvertView=_suspensionAdvertView;
@property(retain, nonatomic) QKAdvert *videoEndAdvert; // @synthesize videoEndAdvert=_videoEndAdvert;
@property(nonatomic) _Bool hasAdvertInVideoEnd; // @synthesize hasAdvertInVideoEnd=_hasAdvertInVideoEnd;
@property(retain, nonatomic) QKNextVideoTitleView *nextVideoTitleView; // @synthesize nextVideoTitleView=_nextVideoTitleView;
@property(nonatomic) _Bool playEndInThreeSecondsHasCallBack; // @synthesize playEndInThreeSecondsHasCallBack=_playEndInThreeSecondsHasCallBack;
@property(nonatomic) _Bool videoAutoEnable; // @synthesize videoAutoEnable=_videoAutoEnable;
@property(nonatomic) double currentBrightness; // @synthesize currentBrightness=_currentBrightness;
@property(retain, nonatomic) UISlider *volumeViewSlider; // @synthesize volumeViewSlider=_volumeViewSlider;
@property(nonatomic) double briVolVariation; // @synthesize briVolVariation=_briVolVariation;
@property(retain, nonatomic) MPVolumeView *sysVolumeView; // @synthesize sysVolumeView=_sysVolumeView;
@property(retain, nonatomic) QKBrightnessVolumeView *myBriVolView; // @synthesize myBriVolView=_myBriVolView;
@property(nonatomic) long long lastFullScreenOrientation; // @synthesize lastFullScreenOrientation=_lastFullScreenOrientation;
@property(retain, nonatomic) UIImageView *bufferImageView; // @synthesize bufferImageView=_bufferImageView;
@property(nonatomic) long long networkStatus; // @synthesize networkStatus=_networkStatus;
@property(retain, nonatomic) VideoDrageProgress *drageProgress; // @synthesize drageProgress=_drageProgress;
@property(nonatomic) long long panDirection; // @synthesize panDirection=_panDirection;
@property(nonatomic) _Bool isNeesShow4GTips; // @synthesize isNeesShow4GTips=_isNeesShow4GTips;
@property(nonatomic) int src; // @synthesize src=_src;
@property(nonatomic) int pasuse_type; // @synthesize pasuse_type=_pasuse_type;
@property(nonatomic) double hoverAdCount; // @synthesize hoverAdCount=_hoverAdCount;
@property(nonatomic) _Bool hoverAdToggle; // @synthesize hoverAdToggle=_hoverAdToggle;
@property(nonatomic) _Bool timerToggle; // @synthesize timerToggle=_timerToggle;
@property(retain, nonatomic) NSTimer *hoverAdTimer; // @synthesize hoverAdTimer=_hoverAdTimer;
@property(retain, nonatomic) NSTimer *loopTimer; // @synthesize loopTimer=_loopTimer;
@property(retain, nonatomic) UIView *containView; // @synthesize containView=_containView;
@property(nonatomic) _Bool isNeedPauseVideoAuto; // @synthesize isNeedPauseVideoAuto=_isNeedPauseVideoAuto;
@property(nonatomic) _Bool isTopLayer; // @synthesize isTopLayer=_isTopLayer;
@property(nonatomic) _Bool hasNextVideo; // @synthesize hasNextVideo=_hasNextVideo;
@property(nonatomic) _Bool isShowClose; // @synthesize isShowClose=_isShowClose;
@property(nonatomic) _Bool hasAlertingNow; // @synthesize hasAlertingNow=_hasAlertingNow;
@property(nonatomic) _Bool isHor; // @synthesize isHor=_isHor;
@property(nonatomic) _Bool isFullScreen; // @synthesize isFullScreen=_isFullScreen;
@property(nonatomic) _Bool isVideoProgressDraging; // @synthesize isVideoProgressDraging=_isVideoProgressDraging;
@property(nonatomic) __weak id <VideoPlayerControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UIImageView *netWorkPlayImageView; // @synthesize netWorkPlayImageView=_netWorkPlayImageView;
@property(retain, nonatomic) UIButton *closeButton; // @synthesize closeButton=_closeButton;
@property(retain, nonatomic) QKPlayerExceptionView *playerExceptionView; // @synthesize playerExceptionView=_playerExceptionView;
@property(retain, nonatomic) QKVideoPlayEndView *videoPlayEndView; // @synthesize videoPlayEndView=_videoPlayEndView;
@property(retain, nonatomic) QKPlayerControlView *playerControlView; // @synthesize playerControlView=_playerControlView;
@property(retain, nonatomic) VideoTraceReportModel *traceModel; // @synthesize traceModel=_traceModel;
@property(retain, nonatomic) VideoPlayerModel *videoModel; // @synthesize videoModel=_videoModel;
@property(retain, nonatomic) VrMovieViewController *mVrMovieVC; // @synthesize mVrMovieVC=_mVrMovieVC;
@property(nonatomic) int playerState; // @synthesize playerState=_playerState;
@property(nonatomic) int videoPlayerState; // @synthesize videoPlayerState=_videoPlayerState;
@property(nonatomic) _Bool isFirstPlayByWifi; // @synthesize isFirstPlayByWifi=_isFirstPlayByWifi;
@property(nonatomic) _Bool isSetUrl; // @synthesize isSetUrl=_isSetUrl;
- (void).cxx_destruct;
- (void)videoPlayEndView_pauseBtnClick;
- (void)videoPlayEndView_replayBtnClick;
- (void)videoPlayEndView_nextBtnClickWithIsAutoPlay:(_Bool)arg1;
- (void)goHorizontalFullScreen;
- (void)goVerticalFullScreen;
- (void)setNextVideoViewIfIsFullScreen;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)singleClick:(id)arg1;
- (void)panGestureRecognizeDirection:(id)arg1;
- (void)playerExceptionView_clickBtnClick:(id)arg1;
- (void)netWorkBackAction:(id)arg1;
- (void)rePlay;
- (void)netWorkPlayAction:(id)arg1;
- (void)closeAction;
- (void)dismiss:(id)arg1;
- (void)showNextVideoTitleView:(id)arg1;
- (void)loadPlayerEndAdvert:(id)arg1;
- (void)getPlayerEndAdvert;
- (void)hidenSuspensionAdvertViewWithNeverShow:(_Bool)arg1;
- (void)loadVideoHoverAdvert;
- (void)hoverAdvertLoop:(id)arg1;
- (void)getVideoHoverAdvert;
- (void)getVideoAdvert;
- (void)reportReadTimeDuration;
- (void)watchEnd;
- (void)watchStart;
- (void)billingReport;
- (void)reportToQDP;
- (void)reportVideoPalyBehavior;
- (id)statusBar;
- (void)pausePlayerWithBufferingOff:(_Bool)arg1;
- (void)playerControlViewAddAction;
- (void)setPlayerExceptionViewWith:(id)arg1 withType:(int)arg2;
- (void)showEndViewWithNeedPasue:(_Bool)arg1 withHasError:(_Bool)arg2;
- (void)showEndViewWithError;
- (void)startHoverAdTimer;
- (void)loopTimerFunction:(id)arg1;
- (void)delayResumeLoopTimer;
- (void)resumeLoopTimer;
- (void)pasueLoopTimer;
- (double)getCurrentPlayTime;
- (void)hideDrageProgressViewWith:(id)arg1;
- (void)showDrageProgressView;
- (void)updateDrageProgressView;
- (void)horizontalMoved:(double)arg1;
- (void)autoHideToolBar;
- (void)showPlayerControlViewWithAnimating;
- (void)hidePlayerControlViewWithAnimating;
- (void)enterSmallScreenAction;
- (void)showGuesureImage;
- (void)enterFullScreenAction;
- (void)drageProgressSeekVideoWith:(id)arg1;
- (void)playerControlView_videoProgressSliderTouchEnded:(id)arg1;
- (void)playerControlView_videoProgressSliderValueChanged:(id)arg1;
- (void)playerControlView_videoProgressSliderTouchBegan:(id)arg1;
- (void)playerControlView_fullScreenBtnClick:(id)arg1;
- (void)playerControlView_playButtonClick:(id)arg1;
- (void)playerControlView_backBtnClick:(id)arg1;
- (void)playerControlView_playPauseBtnClick:(id)arg1;
- (void)videoDisabledRotated:(id)arg1;
- (void)clipsboardGiftShow;
- (void)applicationWillResignActive;
- (void)applicationDidBecomeActive;
- (void)notification_netWork:(id)arg1;
- (void)fullscreenWhenApnsSkip;
- (void)fullscreenWhenApnsShow:(id)arg1;
- (void)fullscreenWhenApnsDetail;
- (void)mediaPlayerEnterForeground:(id)arg1;
- (void)mediaPlayerEnterBackground:(id)arg1;
- (void)shareManagerUIActivityComplete:(id)arg1;
- (void)shareManagerUIActivityPresent:(id)arg1;
- (void)removeOtherNotificationObservers;
- (void)addOtherNotificationObservers;
- (void)mediaPlayerVideoSizeChange:(id)arg1;
- (void)mediaPlayerError:(id)arg1;
- (void)mediaPlayerRenderedStart:(id)arg1;
- (void)mediaPlayerBufferingEnd:(id)arg1;
- (void)mediaPlayerBufferingStart:(id)arg1;
- (void)mediaPlayerBufferingUpdate:(id)arg1;
- (void)mediaPlayerSeekLoadComplete:(id)arg1;
- (void)mediaPlayerDidSeekComplete:(id)arg1;
- (void)mediaPlayerDidSeekStart:(id)arg1;
- (void)moviePlayBackComplete:(id)arg1;
- (void)mediaIsPreparedToPlayDidChange:(id)arg1;
- (void)isMediaReady:(id)arg1;
- (void)removeVRLibNotificationObservers;
- (void)installMediaPlayerNotificationObservers;
- (void)endBuffer;
- (void)startBuffer;
- (void)cheakPlayerNetWorkState;
- (void)stopPlayer;
- (void)startPlayer;
- (void)showCoverImageWith:(id)arg1;
- (void)showVideoPlayerExceptionVieError;
- (void)setVideoUrlAndPlay;
- (void)showNoWiFiTipsView;
- (void)playWithModel:(id)arg1;
- (void)destory;
- (void)afterOneSecond;
- (void)showCustomVolume:(_Bool)arg1;
- (void)volumeChanged:(id)arg1;
- (void)getVolumeVolue;
- (void)updateBriVolVariation:(double)arg1 isVolume:(_Bool)arg2;
- (void)brightnessVerticalMoved:(double)arg1;
- (void)volumeVerticalMoved:(double)arg1;
- (struct CGAffineTransform)getTransformRotationAngle;
- (void)toOrientation:(long long)arg1;
- (void)deviceOrientationAction;
- (void)interfaceOrientation:(long long)arg1;
- (void)onDeviceOrientationChange;
- (_Bool)shouldAutorotate;
- (void)initSetupUI;
- (void)initData;
- (void)resizeControlsFrame;
- (void)setNeedsStatusBarAppearanceUpdate;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setupUnique;
- (void)didReceiveMemoryWarning;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

